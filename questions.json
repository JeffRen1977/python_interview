[
    {
        "id": 1,
        "title": "Two Sum",
        "description": "Given an array of integers `nums` and an integer `target`, return *indices of the two numbers such that they add up to `target`*.\n\nYou may assume that each input would have *exactly* one solution, and you may not use the *same* element twice.\n\nYou can return the answer in any order.",
        "function_signature": "def two_sum(nums: list[int], target: int) -> list[int]:",
        "example": "Input: nums = [2,7,11,15], target = 9\nOutput: [0,1]\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].",
        "difficulty": "Easy",
        "category": "Arrays & Hashing",
        "test_cases": [
            {"input": {"nums": [2,7,11,15], "target": 9}, "output": [0,1]},
            {"input": {"nums": [3,2,4], "target": 6}, "output": [1,2]},
            {"input": {"nums": [3,3], "target": 6}, "output": [0,1]}
        ]
    },
    {
        "id": 2,
        "title": "Reverse Integer",
        "description": "Given a signed 32-bit integer `x`, return `x` *with its digits reversed*. If reversing `x` causes the value to go outside the signed 32-bit integer range `[-2^31, 2^31 - 1]`, then return `0`.\n\nAssume the environment does not allow you to store 64-bit integers (signed or unsigned).",
        "function_signature": "def reverse_integer(x: int) -> int:",
        "example": "Input: x = 123\nOutput: 321\n\nInput: x = -123\nOutput: -321\n\nInput: x = 120\nOutput: 21",
        "difficulty": "Medium",
        "category": "Math",
        "test_cases": [
            {"input": {"x": 123}, "output": 321},
            {"input": {"x": -123}, "output": -321},
            {"input": {"x": 120}, "output": 21},
            {"input": {"x": 0}, "output": 0},
            {"input": {"x": 1534236469}, "output": 0}
        ]
    },
    {
        "id": 3,
        "title": "Palindrome Number",
        "description": "Given an integer `x`, return `true` if `x` is a palindrome, and `false` otherwise.",
        "function_signature": "def is_palindrome(x: int) -> bool:",
        "example": "Input: x = 121\nOutput: true\nExplanation: 121 reads as 121 from left to right and from right to left.\n\nInput: x = -121\nOutput: false\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n\nInput: x = 10\nOutput: false\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.",
        "difficulty": "Easy",
        "category": "Math",
        "test_cases": [
            {"input": {"x": 121}, "output": True},
            {"input": {"x": -121}, "output": False},
            {"input": {"x": 10}, "output": False},
            {"input": {"x": 0}, "output": True}
        ]
    }
]
